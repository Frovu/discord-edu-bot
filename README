1. Автоматическое присвоение ролей
	Студент в специальном канале пишет "группа фамилия имя",
	если такой студент есть в списке этой группы (добавленном старостой)
	и за ним не зарегестрирован другой аккаунт, он регистрируется и получает роль своей группы
2. Менеджмент группы
	Староста может добавлять/редактировать список группы.
	Староста может кикать(разрегистрировать) студентов(например на случай если они потеряли доступ к старому акку).
	Студент может получить список своей группы где видны зарегистрировавшиеся в системе акки (!список).
3. Пары
	Преподаватели в специальном канале могут использовать комманду для создания пары (!пр / !лк).
	Для каждой пары создается голосовой и текстовый канал, куда получают доступ группы указанные в команде и преподаватель.
	Группы получают уведомление о начале пары.
	3.1 лк
		В голосовом канале говорить может только преподаватель.
	3.1 пр
		В голосовом канале говорить могут все.
	После начала пары для каждый студент зашедший в голосовой канал добавляется в список (с временем входа),
	и если до завершения пары он провел в канале больше (например продолжительность пары минус 15 мин),
	он добавляется в список посетивших.
	Когда преподаватель завершает пару (командой !конец или как-то так), выводятся списки всех посетивших.
	Списки также оправляются в дм преподавателя, через 5 минут каналы пары удаляются.

COMMANDS

.creategroup (admin)
Usage: `.creategroup икбо-07-19 new|auto [elder_id]`
.setlist
Usage: `.setlist икбо-07-19` with text file attached
list file: Members names like `Белов С.М.` separated with \\n
.addmember
Usage: `.addmember икбо-07-19 name...`
.remove
Usage: `.remove икбо-07-19 name...`
.getlist
Usage: `.getlist икбо-07-19`
.register
Зарегистрировать юзера в группе под именем.
Usage: `.register <target> икбо-07-19 name...`
.reset
Кикнуть юзера из его группы.
Usage: `.reset <target>`

JSON

groups.json
{
	"икбо-07-19": {
		role: "role_id",
		channel: "ch_id",
		vc: "ch_id",
		elders: ["id"]
		members: {
			"Белов Семён": "id",
			"Миляев Илья": null
		}
	}
	...
}

teachers.json
{
	"id": {
		"name": "Full Name",
		"cathedra": "ВМ-2",
		"channel": "id",
		"groups": [names of groups teached...]
	}
	...
}

lessions.json
{
	"ongoing": {
		"vc_id": {
			"teacher": id,
			"subj": "subj",
			"start": timestamp,
			"duration": duration,
			"tc": id,
			"groups": [...],
			"checks": counter,
			"attended": {
				"id": checks done
				...
			}
		}
	},
	"scheduled": [
		{
			"subj": "subj",
			"start": timestamp,
			"duration": duratoin,
			"type": "lecture",
			"repeat": "once/weekly/biweekly",
			"teacher": "id",
			"groups": [...]
		}
	]

}
